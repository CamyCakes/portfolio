@function randomNum($min, $max) {
	$rand: random();
	$randomNum: $min + floor($rand * (($max - $min) + 1));
	@return $randomNum;
}

@mixin nice-transition {
	-moz-transition: all 1s cubic-bezier(1, 0, 0, 1);
	-o-transition: all 1s cubic-bezier(1, 0, 0, 1);
	-webkit-transition: all 1s cubic-bezier(1, 0, 0, 1);
	transition: all 1s cubic-bezier(1, 0, 0, 1);
}

.blob {
	$blobColor: #242424;
	position: relative;
	top: 50px;
	left: 0px;

	-webkit-filter: url("#blob");
	-moz-filter: url("#blob");
	-o-filter: url("#blob");
	-ms-filter: url("#blob");
	filter: url("#blob");

	@include nice-transition;

	& .blob-content {
		@include nice-transition;
		display: flex;
		justify-content: center;
		opacity: 1;
	}

	&.large {
		& .blob-content {
			opacity: 0;
		}

		& > div {
			opacity: 0;
			top: 200%;

			&:nth-child(2) {
				right: -350%;
				top: 400%;
			}

			&:nth-child(4) {
				right: -300%;
				top: 400%;
			}

			&:nth-child(2),
			&:nth-child(4),
			&:nth-child(6) {
				height: 90vw;
				width: 110vw;
				opacity: 1;
			}
			&:nth-child(1),
			&:nth-child(3),
			&:nth-child(5) {
				height: 90vw;
				width: 110vw;
				opacity: 1;
				left: -600%;
				top: 20%;
			}
		}
	}

	& > div {
		position: absolute;
		display: inline-block;
		background: $blobColor;
		box-shadow: 0px 0px 20px $blobColor;
		border-radius: 500px;
		opacity: 1;
		animation-direction: normal;
		transform-origin: center center;

		@include nice-transition;

		&:nth-child(even) {
			animation: rotateLeft 40s linear infinite;
		}

		&:nth-child(odd) {
			animation: rotateRight 50s linear infinite;
		}

		$side-collection: 0;
		$top-collection: 0;

		@for $i from 1 to 20 {
			$left: randomNum(-5%, 5%);
			$top: randomNum(-5%, -5%);
			$randW: randomNum(15vw, 18vw);
			$randH: randomNum(15vh, 18vh);

			&:nth-child(#{$i}) {
				width: $randW;
				height: $randH;
				@if ($i % 2 == 0) {
					right: $left;
				} @else {
					left: $left;
				}
			}

			$side-collection: append($side-collection, $left);
			$top-collection: append($top-collection, $top);
		}

		@for $ii from 1 to length($top-collection) {
			&:nth-child(#{$ii}) {
				top: nth($top-collection, $ii);
				animation-delay: -#{$ii/1}s;

				@if ($ii % 2 == 0) {
					right: nth($side-collection, $ii);
				} @else {
					left: nth($side-collection, $ii);
				}
			}
		}
	}
}

@keyframes rotateLeft {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

@keyframes rotateRight {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(-360deg);
	}
}
